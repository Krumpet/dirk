plugins {
    id 'java'
    id "com.google.protobuf" version "0.8.18"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':annotation-processor')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    implementation 'com.google.protobuf:protobuf-java:3.19.4'
    annotationProcessor project(':annotation-processor')
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        proto {
            srcDir 'proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java'
        }
    }
    // remove the test configuration - at least in your example you don't have a special test proto file
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.12.0'
    }

    generateProtoTasks.generatedFilesBaseDir = 'annotation-user/generated-sources'

    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // Here you can configure the task
            task.builtins {
                java { option 'lite' }
            }
        }

        // In addition to all(), you may get the task collection by various
        // criteria:

        // (Java only) returns tasks for a sourceSet
        ofSourceSet('main')

    }
}